{"version":3,"sources":["views/CreatePet.js","views/SinglePet.js","views/Pets.js","views/EditPet.js","App.js","serviceWorker.js","index.js"],"names":["CreatePet","props","useState","petName","setPetName","petType","setPetType","petDescription","setPetDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","errors","setErrors","onSubmit","event","preventDefault","newPet","axios","post","then","res","navigate","data","_id","catch","err","response","onChange","target","value","type","className","message","SinglePet","id","pet","setPet","msg","setMsg","alreadyVoted","setAlreadyVoted","useEffect","get","onClick","idToDel","delete","filteredPet","filter","console","log","isUpvote","likeCount","dislikeCount","put","updatedPet","Pets","pets","setPets","searchCategory","includes","map","idx","key","to","filteredPets","EditPet","editedPet","App","from","noThrow","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.18af4b67.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { navigate } from \"@reach/router\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst CreatePet = props => {\r\n  const [petName, setPetName] = useState(\"\");\r\n  const [petType, setPetType] = useState(\"\");\r\n  const [petDescription, setPetDescription] = useState(\"\");\r\n  const [skill1, setSkill1] = useState(\"\");\r\n  const [skill2, setSkill2] = useState(\"\");\r\n  const [skill3, setSkill3] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const newPet = {\r\n      // long-form\r\n      petName: petName,\r\n      // shorthand because key name and value stored in matching var name\r\n      petDescription,\r\n      petType,\r\n      skill1,\r\n      skill2,\r\n      skill3\r\n    };\r\n\r\n    axios\r\n      .post(\"http://localhost:8000/api/pets\", newPet)\r\n      .then(res => {\r\n        navigate(\"/pets/\" + res.data._id);\r\n      })\r\n      .catch(err => {\r\n        setErrors(err.response.data.errors);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>New Pet</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Pet Name: </label>\r\n          <input\r\n            onChange={event => setPetName(event.target.value)}\r\n            type=\"text\"\r\n          />\r\n          {errors.petName ? (\r\n            <span className=\"error\">{errors.petName.message}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label>Pet Type: </label>\r\n          <textarea\r\n            onChange={event => setPetType(event.target.value)}\r\n            type=\"text\"\r\n          ></textarea>\r\n          {errors.petType ? (\r\n            <span className=\"error\">{errors.petType.message}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label>Pet Description: </label>\r\n          <textarea\r\n            onChange={event => setPetDescription(event.target.value)}\r\n            type=\"text\"\r\n          ></textarea>\r\n          {errors.petDescription ? (\r\n            <span className=\"error\">{errors.petDescription.message}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label>Skill 1: </label>\r\n          <input\r\n            onChange={event => setSkill1(event.target.value)}\r\n            type=\"text\"\r\n          />\r\n          {errors.skill1 ? (\r\n            <span className=\"error\">{errors.skill1.message}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label>Skill 2: </label>\r\n          <input\r\n            onChange={event => setSkill2(event.target.value)}\r\n            type=\"text\"\r\n          />\r\n          {errors.skill2 ? (\r\n            <span className=\"error\">{errors.skill2.message}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label>Skill 3: </label>\r\n          <input\r\n            onChange={event => setSkill3(event.target.value)}\r\n            type=\"text\"\r\n          />\r\n          {errors.skill3 ? (\r\n            <span className=\"error\">{errors.skill3.message}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <button>Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePet;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport { navigate } from \"@reach/router\";\r\n\r\n// id prop comes from the URL, see routing :id\r\nconst SinglePet = ({ id }) => {\r\n  const [pet, setPet] = useState(null);\r\n  const [msg, setMsg] = useState(\"loading...\");\r\n  const [alreadyVoted, setAlreadyVoted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8000/api/pets/\" + id)\r\n      .then(res => setPet(res.data))\r\n      .catch(setMsg(\"Sumtin Wrong\"));\r\n  }, [id]);\r\n\r\n  const handleDelete = idToDel => {\r\n    axios\r\n      .delete(\"http://localhost:8000/api/pets/\" + idToDel)\r\n\r\n      .then(res => {\r\n        navigate(\"/pets/\");\r\n        const filteredPet = pet.filter(pet => pet._id !== idToDel);\r\n\r\n        setPet(filteredPet);\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  const handleVote = isUpvote => {\r\n    if (alreadyVoted) {\r\n      return;\r\n    }\r\n\r\n    if (isUpvote) {\r\n      pet.likeCount++;\r\n    } else {\r\n      pet.dislikeCount++;\r\n    }\r\n\r\n    axios\r\n      .put(\"http://localhost:8000/api/pets/\" + id, pet)\r\n      .then(res => {\r\n        const updatedPet = res.data;\r\n        setPet(updatedPet);\r\n        setAlreadyVoted(true);\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  if (pet === null) {\r\n    return msg;\r\n  }\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <div className=\"single-dog-header\">\r\n        <h2>Pet Shelter</h2>\r\n        <h4>Details About {pet.petName} </h4>\r\n      </div>\r\n\r\n      <div className=\"adopt-div\">\r\n        <button\r\n          className=\"adopt-button\"\r\n          onClick={event => handleDelete(pet._id)}\r\n        >\r\n          Adopt pet\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"single-dog-details\">\r\n        <h4>Pet Type:</h4>\r\n        <p>{pet.petType}</p>\r\n        <h4>Pet Description:</h4>\r\n        <p>{pet.petDescription}</p>\r\n        <p>Skill 1 : {pet.skill1}</p>\r\n        <p>Skill 2 : {pet.skill2}</p>\r\n        <p>Skill 3 : {pet.skill3}</p>\r\n        <button onClick={event => handleVote(true)} className=\"like-button\">\r\n          Like {pet.petName}\r\n        </button>\r\n        <h5 className=\"like-count\">{pet.likeCount} like(s)</h5>\r\n        {/* <button onClick={event => handleVote(false)} className=\"arrow\">\r\n          {pet.dislikeCount}&darr; Like {pet.petName}\r\n        </button> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SinglePet;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { Link } from \"@reach/router\";\r\n\r\nconst Pets = props => {\r\n  const [pets, setPets] = useState([]);\r\n  const [randomPet, setRandomPet] = useState({});\r\n  const [searchCategory, setSearchCategory] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8000/api/pets\")\r\n      .then(res => setPets(res.data))\r\n      .catch(console.log);\r\n  }, []);\r\n\r\n  const handleDelete = idToDel => {\r\n    axios\r\n      .delete(\"http://localhost:8000/api/pets/\" + idToDel)\r\n      .then(res => {\r\n        const filteredPets = pets.filter(pet => pet._id !== idToDel);\r\n        setPets(filteredPets);\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  const handleRandomPet = () => {\r\n    const randIdx = Math.floor(Math.random() * pets.length);\r\n    const randomItem = pets[randIdx];\r\n    setRandomPet(randomItem);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <div>\r\n        <label>DO A SEARCH </label>\r\n        <input\r\n          onChange={event => setSearchCategory(event.target.value)}\r\n          type=\"text\"\r\n        />\r\n      </div> */}\r\n      <hr />\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Title</th>\r\n            <th>Type</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {pets\r\n            .filter(pet => {\r\n              if (searchCategory === \"\") {\r\n                return true;\r\n              } else {\r\n                return (\r\n                  pet.skill1.includes(searchCategory) ||\r\n                  pet.skill2.includes(searchCategory)\r\n                );\r\n              }\r\n            })\r\n            .map((pet, idx) => (\r\n              <tr key={idx}>\r\n                <td>{pet.petName}</td>\r\n                <td>{pet.petType}</td>\r\n\r\n                <td>\r\n                  <Link to={\"/pets/\" + pet._id}>Details</Link> |{\" \"}\r\n                  <Link to={\"/pets/\" + pet._id + \"/edit\"}>Edit</Link> |{\" \"}\r\n                  <button onClick={event => handleDelete(pet._id)}>\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* <div>\r\n        <h3>Random Pet:</h3>\r\n        <button onClick={handleRandomPet}>Get Random Pet</button>\r\n        <p>{JSON.stringify(randomPet)}</p>\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pets;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { navigate } from \"@reach/router\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst EditPet = props => {\r\n  console.log(props);\r\n  const [petName, setPetName] = useState(\"\");\r\n  const [petType, setPetType] = useState(\"\");\r\n  const [petDescription, setPetDescription] = useState(\"\");\r\n  const [skill1, setSkill1] = useState(\"\");\r\n  const [skill2, setSkill2] = useState(\"\");\r\n  const [skill3, setSkill3] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8000/api/pets/\" + props.id)\r\n      .then(res => {\r\n        const pet = res.data;\r\n\r\n        setPetName(pet.petName);\r\n        setPetType(pet.petType);\r\n        setPetDescription(pet.petDescription);\r\n        setSkill1(pet.skill1);\r\n        setSkill2(pet.skill2);\r\n        setSkill3(pet.skill3);\r\n      })\r\n      .catch(console.log);\r\n  }, [props.id]);\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const editedPet = {\r\n      // long-form\r\n      petName: petName,\r\n      // shorthand because key name and value stored in matching var name\r\n      petDescription,\r\n      petType,\r\n      skill1,\r\n      skill2,\r\n      skill3\r\n    };\r\n    axios\r\n      .put(\"http://localhost:8000/api/pets/\" + props.id, editedPet)\r\n      .then(res => navigate(\"/pets/\" + res.data._id))\r\n      .catch(err => {\r\n        setErrors(err.response.data.errors);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Edit Pet</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Pet Name: </label>\r\n          <input\r\n            onChange={event => setPetName(event.target.value)}\r\n            value={petName}\r\n            type=\"text\"\r\n          />\r\n          {errors.petName ? (\r\n            <span className=\"error\">{errors.petName.message}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label>Pet Type: </label>\r\n          <textarea\r\n            onChange={event => setPetType(event.target.value)}\r\n            value={petType}\r\n            type=\"text\"\r\n          ></textarea>\r\n          {errors.petType ? (\r\n            <span className=\"error\">{errors.petType.message}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label> Pet Description: </label>\r\n          <textarea\r\n            onChange={event => setPetDescription(event.target.value)}\r\n            value={petDescription}\r\n            type=\"text\"\r\n          ></textarea>\r\n          {errors.petDescription ? (\r\n            <span className=\"error\">{errors.petDescription.message}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label>Skill 1: </label>\r\n          <input\r\n            onChange={event => setSkill1(event.target.value)}\r\n            value={skill1}\r\n            type=\"text\"\r\n          />\r\n          {errors.skill1 ? (\r\n            <span className=\"error\">{errors.skill1.message}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label>Skill 2: </label>\r\n          <input\r\n            onChange={event => setSkill2(event.target.value)}\r\n            value={skill2}\r\n            type=\"text\"\r\n          />\r\n          {errors.skill2 ? (\r\n            <span className=\"error\">{errors.skill2.message}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label>Skill 3: </label>\r\n          <input\r\n            onChange={event => setSkill3(event.target.value)}\r\n            value={skill3}\r\n            type=\"text\"\r\n          />\r\n          {errors.skill3 ? (\r\n            <span className=\"error\">{errors.skill3.message}</span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <button>Edit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPet;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { Link, Redirect, Router } from \"@reach/router\";\n\nimport CreatePet from \"./views/CreatePet\";\nimport SinglePet from \"./views/SinglePet\";\nimport Pets from \"./views/Pets\";\nimport EditPet from \"./views/EditPet\";\n\n// test\n\nfunction App() {\n  return (\n    <>\n      <div className=\"container\">\n        <Link to=\"/pets\">View All Pets</Link>{\" \"}\n        <Link to=\"/pets/new\">Create Pet</Link>\n      </div>\n      <div className=\"container-flex justify-content-center\">\n        <Router>\n          <Redirect from=\"/\" to=\"/pets\" noThrow=\"true\" />\n          <CreatePet path=\"/pets/new\" />\n          <SinglePet path=\"/pets/:id\" />\n          <Pets path=\"/pets\" />\n          <EditPet path=\"/pets/:id/edit\" />\n        </Router>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}